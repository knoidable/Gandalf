/**
 * Gandalf
 * Copyright (C) 2020 Craig Roberts, Braden Edmunds, Alex High
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see https://www.gnu.org/licenses/gpl-3.0.html
 *
 * @name ships.js
 * @version 2021/06/07
 * @summary Gandalf Spells
 **/
'use strict';

const util = require('util');
const Config = require('config').get('config');
const { Mordor } = require('../../Mordor/Mordor');
const numeral = require('numeral');
const dayjs = require('dayjs')
const {encode} = require('html-entities');

const Ship = require('../../Mordor/models/Ship');


let Ships_ship_usage = he.encode('!ship <ship>');
let Ships_ship_desc = 'Returns the stats of the specified ship.';
let Ships_ship = (args) => {
  return new Promise(function(resolve, reject) {
    if (!Array.isArray(args) || args.length < 1) { reject(Ships_ship_usage); }
    let _ship = args[0];
    //console.log(`ARGS: ship=${_ship}`);

    Ship.find().then((ships) => {
      //console.log(ships);
      let ship = ships.find(s => s.name.toLowerCase().startsWith(_ship.toLowerCase()) );
      if(!ship) {
        reject(`Cannot find ship ${_ship}`);
      } else {
        let reply = `${ship.name} (${ship.race}) is class ${ship.class} | Target 1: ${ship.target1}`;
        if(ship.target2 != '-') {
          reply += ` | Target 2: ${ship.target2}`;
        }
        if(ship.target3 != '-') {
          reply += ` | Target 3: ${ship.target3}`;
        }
        reply += ` | Type: ${ship.type} | Init: ${ship.initiative}`;
        reply += ` | EMPres: ${ship.empres}`;

        if(ship.type.toLowerCase() == 'emp') {
          reply += ` | Guns: ${ship.guns}`;
        } else {
          reply += ` | D/C: ${Math.trunc(Number(ship.damage)*10000/(Number(ship.metal) + Number(ship.crystal) + Number(ship.eonium)))}`;
        }
        reply += ` | A/C: ${Math.trunc(Number(ship.armor)*10000/(Number(ship.metal) + Number(ship.crystal) + Number(ship.eonium)))}`;
        resolve(reply);
      }
    }).catch((err) => { reject(err); });
  });
};





module.exports = {
  "ship": { usage: Ships_ship_usage, description: Ships_ship_desc, cast: Ships_ship }
};


